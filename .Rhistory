usethis::use_gpl3_license()
source("~/tamu_fall_2024/stat_600/final_project/gower.cluster/R/gower_dist_mat.R")
vignette(package = "gower.cluster")
usethis::use_vignette('gower_implementation_cluster_analysis', 'An Implementation of Gower Distance in Exploratory Cluster Analysis')
install.packages('gower.cluster')
install.packages('dendextend')
library(gower.cluster)
install.packages('knitr')
install.packages("knitr")
library(gower.cluster)
cat("![Cluster Visualization](images/figure.png)")
cat("![Cluster Visualization](images/figure.png)")
usethis::use_vignette('gower_implementation_cluster_analysis', 'An Implementation of Gower Distance in Exploratory Cluster Analysis')
library(gower.cluster)
# Construct data features of differing types
# Logical
f_logic <- sample(c(0, 1), size = 100, replace = TRUE, prob = c(.5, .5))
# Numeric
f_numeric <- f_logic + sample(rnorm(100, sd = 0.5))
# Ordered categorical (i.e. ordinal)
f_cat_ordered <- ifelse(f_numeric < 0.15, 0,
ifelse(f_numeric < 0.85, 1, 2))
# Unordered categorical (i.e. nominal)
f_cat_unordered <- sample(c(0, 1, 2, 3), size = 100, replace = TRUE, prob = c(.25, .25, .25, .25))
# Construct dataframe
example_df <- as.data.frame(cbind(f_logic, f_numeric, f_cat_ordered, f_cat_unordered))
example_df
head(example_df)
# Construct data features of differing types
# Logical
f_logic <- sample(c(0, 1), size = 100, replace = TRUE, prob = c(.5, .5))
# Numeric
f_numeric <- f_logic + sample(rnorm(100, sd = 0.5))
# Ordered categorical (i.e. ordinal)
f_cat_ordered <- ifelse(f_numeric < 0.15, 0,
ifelse(f_numeric < 0.85, 1, 2))
# Unordered categorical (i.e. nominal)
f_cat_unordered <- sample(c(0, 1, 2, 3), size = 100, replace = TRUE, prob = c(.25, .25, .25, .25))
# Construct dataframe
example_df <- as.data.frame(cbind(f_logic, f_numeric, f_cat_ordered, f_cat_unordered))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# Set global seed:
set.seed(121)
rnorm(1, 2)
rnorm(1, 2)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
set.seed(121)
)
rnorm(1, 2)
rnorm(1, 2)
rnorm(1, 2)
rnorm(1, 2)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
set.seed(121)
rnorm(1, 2)
rnorm(1, 2)
set.seed(121)
rnorm(1, 2)
rnorm(1, 2)
# Set global seed
set.seed(121)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
rnorm(1, 2)
rnorm(1, 2)
# Set global seed
set.seed(121)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
rnorm(1, 2)
rnorm(1, 2)
set.seed(121)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
rnorm(1, 2)
rnorm(1, 2)
library(gower.cluster)
set.seed(121)
rnorm(1, 2)
set.seed(121)
rnorm(1, 2)
library(gower.cluster)
set.seed(121)
rnorm(1, 2)
rnorm(1, 2)
?set.seed
library(gower.cluster)
set.seed(121)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(gower.cluster)
set.seed(121)
rnorm(1, 2)
library(gower.cluster)
set.seed(121)
rnorm(1, 2)
library(gower.cluster)
set.seed(121)
# Construct data features of differing types
# Logical
f_logic <- sample(c(0, 1), size = 100, replace = TRUE, prob = c(.5, .5))
# Numeric
f_numeric <- f_logic + sample(rnorm(100, sd = 0.5))
# Ordered categorical (i.e. ordinal)—assume 0 is low, 2 is high
f_cat_ordered <- ifelse(f_numeric < 0.15, 0,
ifelse(f_numeric < 0.85, 1, 2))
# Unordered categorical (i.e. nominal)
f_cat_unordered <- sample(c(0, 1, 2, 3), size = 100, replace = TRUE, prob = c(.25, .25, .25, .25))
# Construct dataframe
example_df <- as.data.frame(cbind(f_logic, f_numeric, f_cat_ordered, f_cat_unordered))
f_numeric
library(gower.cluster)
set.seed(121)
# Construct data features of differing types
# Logical
f_logic <- sample(c(0, 1), size = 100, replace = TRUE, prob = c(.5, .5))
# Numeric
f_numeric <- f_logic + sample(rnorm(100, sd = 0.5))
# Ordered categorical (i.e. ordinal)—assume 0 is low, 2 is high
f_cat_ordered <- ifelse(f_numeric < 0.15, 0,
ifelse(f_numeric < 0.85, 1, 2))
# Unordered categorical (i.e. nominal)
f_cat_unordered <- sample(c(0, 1, 2, 3), size = 100, replace = TRUE, prob = c(.25, .25, .25, .25))
# Construct dataframe
example_df <- as.data.frame(cbind(f_logic, f_numeric, f_cat_ordered, f_cat_unordered))
f_numeric
library(gower.cluster)
set.seed(121)
# Construct data features of differing types
# Logical
f_logic <- sample(c(0, 1), size = 100, replace = TRUE, prob = c(.5, .5))
# Numeric
f_numeric <- f_logic + sample(rnorm(100, sd = 0.5))
# Ordered categorical (i.e. ordinal)—assume 0 is low, 2 is high
f_cat_ordered <- ifelse(f_numeric < 0.15, 0,
ifelse(f_numeric < 0.85, 1, 2))
# Unordered categorical (i.e. nominal)
f_cat_unordered <- sample(c(0, 1, 2, 3), size = 100, replace = TRUE, prob = c(.25, .25, .25, .25))
# Construct dataframe
example_df <- as.data.frame(cbind(f_logic, f_numeric, f_cat_ordered, f_cat_unordered))
f_numeric
library(gower.cluster)
set.seed(121)
# Construct data features of differing types
# Logical
f_logic <- sample(c(0, 1), size = 100, replace = TRUE, prob = c(.5, .5))
# Numeric
f_numeric <- f_logic + sample(rnorm(100, sd = 0.5))
# Ordered categorical (i.e. ordinal)—assume 0 is low, 2 is high
f_cat_ordered <- ifelse(f_numeric < 0.15, 0,
ifelse(f_numeric < 0.85, 1, 2))
# Unordered categorical (i.e. nominal)
f_cat_unordered <- sample(c(0, 1, 2, 3), size = 100, replace = TRUE, prob = c(.25, .25, .25, .25))
# Construct dataframe
example_df <- as.data.frame(cbind(f_logic, f_numeric, f_cat_ordered, f_cat_unordered))
library(gower.cluster)
set.seed(121)
# Apply Gower_Cluster
gower_cluster_output <- Gower_Cluster(data.x = example_df, var.type.vec = c(3, 0, 2, 1), var.weight.vec = c(10, 5, 5, 5),
cluster.vis = TRUE, method = 'average', silhouette.kmin = 2, silhouette.kmax = 50,
ordered.cat.levels.vec = list(list(0, 1, 2)))
library(gower.cluster)
set.seed(121)
library(gower.cluster)
set.seed(121)
knitr::include_graphics("images/workflow.PNG")
library(gower.cluster)
set.seed(121)
# Construct data features of differing types
# Logical
f_logic <- sample(c(0, 1), size = 100, replace = TRUE, prob = c(.5, .5))
# Numeric
f_numeric <- f_logic + sample(rnorm(100, sd = 0.5))
# Ordered categorical (i.e. ordinal)—assume 0 is low, 2 is high
f_cat_ordered <- ifelse(f_numeric < 0.15, 0,
ifelse(f_numeric < 0.85, 1, 2))
# Unordered categorical (i.e. nominal)
f_cat_unordered <- sample(c(0, 1, 2, 3), size = 100, replace = TRUE, prob = c(.25, .25, .25, .25))
# Construct dataframe
example_df <- as.data.frame(cbind(f_logic, f_numeric, f_cat_ordered, f_cat_unordered))
library(gower.cluster)
set.seed(121)
# Apply Gower_Cluster
gower_cluster_output <- Gower_Cluster(data.x = example_df, var.type.vec = c(3, 0, 2, 1), var.weight.vec = c(10, 5, 5, 5),
cluster.vis = TRUE, method = 'average', silhouette.kmin = 2, silhouette.kmax = 50,
ordered.cat.levels.vec = list(list(0, 1, 2)))
detach("package:gower.cluster", unload = TRUE)
devtools::install_github("aajb99/gower.cluster")
library(gower.cluster)
set.seed(121)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(gower.cluster)
set.seed(121)
# Construct data features of differing types
# Logical
f_logic <- sample(c(0, 1), size = 100, replace = TRUE, prob = c(.5, .5))
# Numeric
f_numeric <- f_logic + sample(rnorm(100, sd = 0.5))
# Ordered categorical (i.e. ordinal)—assume 0 is low, 2 is high
f_cat_ordered <- ifelse(f_numeric < 0.15, 0,
ifelse(f_numeric < 0.85, 1, 2))
# Unordered categorical (i.e. nominal)
f_cat_unordered <- sample(c(0, 1, 2, 3), size = 100, replace = TRUE, prob = c(.25, .25, .25, .25))
# Construct dataframe
example_df <- as.data.frame(cbind(f_logic, f_numeric, f_cat_ordered, f_cat_unordered))
library(gower.cluster)
set.seed(121)
# Apply Gower_Cluster
gower_cluster_output <- Gower_Cluster(data.x = example_df, var.type.vec = c(3, 0, 2, 1), var.weight.vec = c(10, 5, 5, 5),
cluster.vis = TRUE, method = 'average', silhouette.kmin = 2, silhouette.kmax = 50,
ordered.cat.levels.vec = list(list(0, 1, 2)))
library(gower.cluster)
set.seed(121)
gower_cluster_output$optimal.k
library(gower.cluster)
set.seed(121)
gower_cluster_output$dend.plot()
library(gower.cluster)
set.seed(121)
# Construct data features of differing types
# Logical
f_logic <- sample(c(0, 1), size = 80, replace = TRUE, prob = c(.5, .5))
# Numeric
f_numeric <- f_logic + sample(rnorm(80, sd = 0.5))
# Ordered categorical (i.e. ordinal)—assume 0 is low, 2 is high
f_cat_ordered <- ifelse(f_numeric < 0.15, 0,
ifelse(f_numeric < 0.85, 1, 2))
# Unordered categorical (i.e. nominal)
f_cat_unordered <- sample(c(0, 1, 2, 3), size = 80, replace = TRUE, prob = c(.25, .25, .25, .25))
# Construct dataframe
example_df <- as.data.frame(cbind(f_logic, f_numeric, f_cat_ordered, f_cat_unordered))
library(gower.cluster)
set.seed(121)
# Apply Gower_Cluster
gower_cluster_output <- Gower_Cluster(data.x = example_df, var.type.vec = c(3, 0, 2, 1), var.weight.vec = c(10, 5, 5, 5),
cluster.vis = TRUE, method = 'average', silhouette.kmin = 2, silhouette.kmax = 50,
ordered.cat.levels.vec = list(list(0, 1, 2)))
gower_cluster_output$dend.plot()
library(gower.cluster)
set.seed(121)
gower_cluster_output$optimal.k
library(gower.cluster)
set.seed(121)
# Apply Gower_Cluster
gower_cluster_output <- Gower_Cluster(data.x = example_df, var.type.vec = c(3, 0, 2, 1), var.weight.vec = c(10, 5, 5, 5),
cluster.vis = TRUE, method = 'average', silhouette.kmin = 2, silhouette.kmax = 50,
ordered.cat.levels.vec = list(list(0, 1, 2)))
gower_cluster_output$dend.plot()
gower_cluster_output$silhouette.plot()
gower_cluster_output$optimal.k
library(gower.cluster)
set.seed(121)
# Apply Gower_Cluster
gower_cluster_output <- Gower_Cluster(data.x = example_df, var.type.vec = c(3, 0, 2, 1), var.weight.vec = c(10, 5, 5, 5),
cluster.vis = TRUE, method = 'average', silhouette.kmin = 2, silhouette.kmax = 35,
ordered.cat.levels.vec = list(list(0, 1, 2)))
gower_cluster_output$dend.plot()
gower_cluster_output$silhouette.plot()
gower_cluster_output$optimal.k
zoom(gower_cluster_output$dend.plot())
library(gower.cluster)
set.seed(121)
gower_cluster_output$hclust.object$order
devtools::install_github("aajb99/gower.cluster")
detach("package:gower.cluster", unload = TRUE)
devtools::install_github("aajb99/gower.cluster")
library('gower.cluster')
?Gower_Cluster
### Example 1
## Compare single and complete methods in Gower Distance Hierarchical Clustering
# Simulate data with dataframe
feature1 <- sample(c(0, 1), size = 100, replace = TRUE, prob = c(.5, .5))
feature2 <- feature1 + sample(rnorm(100))
df_sim <- as.data.frame(cbind(feature1, feature2))
# Apply Gower_Cluster function using average and complete methods
out_avg <- Gower_Cluster(data.x = df_sim, var.type.vec = c(3, 0),
cluster.vis = TRUE, method = 'average', silhouette.kmin = 2, silhouette.kmax = 10)
out_comp <- Gower_Cluster(data.x = df_sim, var.type.vec = c(3, 0),
cluster.vis = TRUE, method = 'complete', silhouette.kmin = 2, silhouette.kmax = 10)
# View cluster orderings
cat("Cluster Ordering (Avg Method): \n",
out_avg$hclust.object$order,
"\nCluster Ordering (Comp Method): \n",
out_avg$hclust.object$order)
# Compare dendrograms
out_avg$dend.plot()
out_comp$dend.plot()
# Compare silhouette plots
out_avg$silhouette.plot()
out_comp$silhouette.plot()
vignette(package = "gower.cluster")
browseVignettes(package = "gower.cluster")
devtools::build_vignettes()
vignette(package = "gower.cluster")
detach("package:gower.cluster", unload = TRUE)
devtools::install_github("aajb99/gower.cluster")
vignette(package = "gower.cluster")
vignette("gower_implementation_cluster_analysis", package = "gower.cluster")
install.packages(c("knitr", "rmarkdown"))
install.packages(c("knitr", "rmarkdown"))
vignette(package = "gower.cluster")
devtools::clean_vignettes()
devtools::build()
devtools::install()
vignette(package = "gower.cluster")
rmarkdown::render("vignettes/gower_implementation_cluster_analysis.Rmd")
vignette(package = "gower.cluster")
?install_github
detach("package:gower.cluster", unload = TRUE)
devtools::install_github("aajb99/gower.cluster", build_vignettes = TRUE)
devtools::install_github("aajb99/gower.cluster")
devtools::install_github("aajb99/gower.cluster")
devtools::install_github("aajb99/gower.cluster", build_vignettes = TRUE)
vignette(package = 'gower.cluster')
vignette('gower_implementation_cluster_analysis', package = 'gower.cluster')
vignette("gower_implementation_cluster_analysis", package = "gower.cluster")
library('gower.cluster')
?Gower_Cluster
vignette("gower_implementation_cluster_analysis", package = "gower.cluster")
detach("package:gower.cluster", unload = TRUE)
devtools::install_github("aajb99/gower.cluster", build_vignettes = TRUE)
vignette("gower_implementation_cluster_analysis", package = "gower.cluster")
detach("package:gower.cluster", unload = TRUE)
devtools::install_github("aajb99/gower.cluster", build_vignettes = TRUE)
library('gower.cluster')
?Gower_Cluster
###############
# Set up data #
###############
# Construct data features of differing types
# Logical
f_logic <- sample(c(0, 1), size = 80, replace = TRUE, prob = c(.5, .5))
# Numeric
f_numeric <- f_logic + sample(rnorm(80, sd = 0.5))
# Ordered categorical (i.e. ordinal)—assume 0 is low, 2 is high
f_cat_ordered <- ifelse(f_numeric < 0.15, 0,
ifelse(f_numeric < 0.85, 1, 2))
# Unordered categorical (i.e. nominal)
f_cat_unordered <- sample(c(0, 1, 2, 3), size = 80, replace = TRUE, prob = c(.25, .25, .25, .25))
# Construct dataframe
example_df <- as.data.frame(cbind(f_logic, f_numeric, f_cat_ordered, f_cat_unordered))
#######################
# Apply Gower_Cluster #
#######################
# Apply Function
gower_cluster_output <- Gower_Cluster(data.x = example_df, var.type.vec = c(3, 0, 2, 1), var.weight.vec = c(10, 5, 5, 5),
cluster.vis = TRUE, method = 'average', silhouette.kmin = 2, silhouette.kmax = 30,
ordered.cat.levels.vec = list(list(0, 1, 2)))
# Display dendrogram, silhouette plot, and optimal k value outputs:
gower_cluster_output$dend.plot()
gower_cluster_output$silhouette.plot()
gower_cluster_output$optimal.k
gower_cluster_output$optimal.k
gower_cluster_output$dend.plot()
vignette("gower_implementation_cluster_analysis", package = "gower.cluster")
